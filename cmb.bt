// CMB struct parser
// Author: @drewler
// Based on info from @xdanieldzd's N3DSCmbViewer

LittleEndian();

typedef struct {
    uchar bone_id;
    uchar unknown00;
    uchar parent_id;
    uchar unknown01;
    float scale[3];
    float rotation[3];
    float translation[3];
    uint unknown02;
} BONE;

typedef struct {
    uint unknown00;
    uint bone_count;
    uint unknown01;
    BONE bone[bone_count];
} SKL;

typedef struct {
    uint unknown00;
    uint unknown01;
    uint unknown02;
    uint unknown03;
    ushort textureid0;
    ushort unknown04;
    ushort textureminfilter0;
    ushort texturemagfilter0;
    ushort texturewrapmodes0;
    ushort texturewrapmodet0;
    uint unknown05;
    uint unknown06;
    uint unknown07;
    ushort textureid1;
    ushort unknown08;
    //...
} MATS;

typedef struct {
    uint datalength;
    ushort unknown00;
    ushort unknown01;
    ushort width;
    ushort height;
    uint format;
    uint dataoffset;
    char name[16];
    //...
} TEX;

typedef struct {
    uint datalength;
    uint unknown00;
    ushort unknown01;
    ushort unknown02;
    ushort unknown03;
    ushort unknown04;
    uint unknown05;
    uint unknown06;
    uint unknown07;
    uint unknown08;
    uint unknown09;
} MSHS;

typedef struct {
    //...
} SEPD;

typedef struct {
    uint datalength;
    uint n_sepd;
    uint unknown00;
    ushort sepd_offset[n_sepd];
    local int i;
    for(i = 0; i < n_sepd; i++){
        SEPD sepd;
    }
} SHP;

typedef struct {
    local uint sklm_start = FTell();
    uint datalength;
    uint mshs_offset;
    uint shp_offset;
    FSeek(sklm_start + mshs_offset);
    MSHS mshs;
    FSeek(sklm_start + shp_offset);
    SHP shp;
} SKLM;

typedef struct {
    char magic[4];
    switch(magic){
        case "skl\x20":
            SKL skl;
            break;
        case "qtrs":
        case "mats":
            MATS mats;
            break;
        case "tex\x20":
            TEX tex;
            break;
        case "sklm":
            SKLM sklm;
            break;
        case "luts":
        case "vatr":
        case "\x00\x00\x01\x00": // Vertex data
        case "\x00\x00\x00\x00": // Texture data
        default:
            break;
    }
} CMB_SUB;

typedef struct {
    local uint cmb_start = FTell();                            
    char magic[4];
    uint unknown00;
    uint unknown01;
    uint unknown02;
    char name[16];
    uint unknown03;
    uint chunk_offset[unknown01];
    local int i = 0;
    for(i = 0; i < unknown01 - 1; i++){
        FSeek(cmb_start + chunk_offset[i]);
        CMB_SUB cmb_sub;
    }    
} CMB;